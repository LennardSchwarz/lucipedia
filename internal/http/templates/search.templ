package templates

templ SearchResults(data SearchPageData) {
    <article class="max-w-2xl">
        <header class="border-b border-slate-200 pb-4">
            <h1 class="text-3xl font-bold text-slate-900">Search</h1>
            if data.Query != "" {
                <p class="mt-2 text-sm text-slate-500">Results for "{ data.Query }"</p>
            } else {
                <p class="mt-2 text-sm text-slate-500">Search the Lucipedia archives.</p>
            }
        </header>
        <section class="mt-6 space-y-4 text-base leading-7 text-slate-700">
            if data.ErrorMessage != "" {
                <div class="rounded border border-red-200 bg-red-50 px-4 py-3 text-sm text-red-700">
                    { data.ErrorMessage }
                </div>
            }
            if len(data.Results) == 0 {
                <p class="text-slate-600">No pages found yet—try another query or explore from the main page.</p>
            } else {
                <ul class="space-y-3">
                    for _, result := range data.Results {
                        <li>
                            <a class="text-indigo-600 hover:underline" href={ result.URL }>{ result.Title }</a>
                        </li>
                    }
                </ul>
            }
        </section>
    </article>
}

templ SearchPage(data SearchPageData) {
    @AppLayout("Search • Lucipedia", data.Query) {
        @SearchResults(data)
    }
}

templ SearchStreamingShell(data SearchStreamingShellData) {
    @AppLayout(data.Title, data.Query) {
        <div id="search-content" data-loaded="loading" aria-live="polite">
            <article class="max-w-2xl">
                <header class="border-b border-slate-200 pb-4">
                    <h1 class="text-3xl font-bold text-slate-900">Search</h1>
                    if data.Query != "" {
                        <p class="mt-2 text-sm text-slate-500">Results for "{ data.Query }"</p>
                    } else {
                        <p class="mt-2 text-sm text-slate-500">Search the Lucipedia archives.</p>
                    }
                </header>
                <section class="mt-6 space-y-4 text-base leading-7 text-slate-700">
                    <div id="search-loading" class="flex items-center gap-3 rounded border border-slate-200 bg-slate-50 px-4 py-3 text-sm text-slate-600 shadow-sm">
                        <span class="inline-block h-4 w-4 animate-spin rounded-full border-2 border-indigo-500 border-t-transparent" aria-hidden="true"></span>
                        <span>{ data.LoadingMessage }</span>
                    </div>
                </section>
            </article>
        </div>
    }
}

templ SearchStreamingContent(data SearchStreamingContentData) {
    <template id="search-content-template">
        @SearchResults(data.Page)
    </template>
    <script>
        (function () {
            const container = document.getElementById('search-content');
            const template = document.getElementById('search-content-template');
            if (!container || !template) {
                return;
            }
            container.dataset.loaded = 'ready';
            container.replaceChildren(template.content.cloneNode(true));
            template.remove();
        })();
    </script>
}

templ SearchStreamingError(data SearchStreamingErrorData) {
    <template id="search-content-template">
        <div class="rounded-lg border border-red-200 bg-red-50 px-4 py-3 text-red-800 shadow-sm">
            <h2 class="text-lg font-semibold">{ data.Title }</h2>
            <p class="mt-2 text-sm text-red-900">{ data.Message }</p>
        </div>
    </template>
    <script>
        (function () {
            const container = document.getElementById('search-content');
            const template = document.getElementById('search-content-template');
            if (!container || !template) {
                return;
            }
            container.dataset.loaded = 'error';
            container.replaceChildren(template.content.cloneNode(true));
            template.remove();
        })();
    </script>
}
